version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    build:
      context: ./database
      dockerfile: Dockerfile
    container_name: torneito_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: torneito_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - torneito_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: torneito_backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: torneito_db
      DB_USER: postgres
      DB_PASSWORD: password
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    networks:
      - torneito_network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: torneito_frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - torneito_network

  # pgAdmin (opcional - para administrar la BD visualmente)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: torneito_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@torneito.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - torneito_network

volumes:
  postgres_data:

networks:
  torneito_network:
    driver: bridge
